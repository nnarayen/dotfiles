###############################################################################
# Plugin configuration
###############################################################################

# Lazy load NVM
export NVM_LAZY_LOAD=true
export NVM_NO_USE=true

###############################################################################
# Path configuration
###############################################################################
export PATH=$PATH:/usr/bin
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:/bin
export PATH=$PATH:/usr/sbin
export PATH=$PATH:/sbin
export PATH=$PATH:/usr/local/git/bin
export PATH=$PATH:/usr/texbin
export PATH=$PATH:$HOME/.webtau
export PATH=$PATH:$HOME/go/bin

# Use homebrew python by default.
export PATH=/usr/local/bin:$PATH

###############################################################################
# Source Prezto
###############################################################################
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

###############################################################################
# Miscellany
###############################################################################

# Add zsh aliases
if [ -f ~/.zsh_aliases ]; then
  source ~/.zsh_aliases
fi

# Set colorful terminal
if [[ $TERM == xterm ]]; then
  TERM=xterm-256color;
fi

# User configuration
setopt NONOMATCH
setopt NOCORRECT

# Neovim as default editor
export EDITOR='nvim'

# Ripgrep configuration
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

# Only autocomplete local branches
zstyle :completion::complete:git-checkout:argument-rest:headrefs command "git for-each-ref --format='%(refname)' refs/heads 2>/dev/null"

# Bintray setup
if [ -f ~/.access/.zsh_bintray ]; then
  source ~/.access/.zsh_bintray
fi

###############################################################################
# FZF
###############################################################################
if [[ -f ~/.fzf.zsh ]]; then
  source ~/.fzf.zsh

  # FZF options
  export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden --glob "!.git/*"'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_CTRL_R_OPTS='--sort'

  # cdf - cd into the directory of the selected file
  cdf() {
    local file
    local dir
    file=$(fzf +m -q "$1") && dir=$(dirname "$file") && cd "$dir"
  }
fi

###############################################################################
# FASD
###############################################################################
eval "$(fasd --init zsh-hook)"

# More lenient fuzzy matching
_FASD_FUZZY=8

fasd_cd() {
  if [ $# -le 1 ]; then
    fasd "$@"
  else
    local _fasd_ret="$(fasd -e echo "$@")"
    [ -z "$_fasd_ret" ] && return
    [ -d "$_fasd_ret" ] && cd "$_fasd_ret" || echo "$_fasd_ret"
  fi
}
alias z="fasd_cd -d"

###############################################################################
# Vi Mode
###############################################################################
bindkey -M viins 'jk' vi-cmd-mode
bindkey '^?' backward-delete-char

bindkey -M viins "$terminfo[cuu1]" history-substring-search-up
bindkey -M viins "$terminfo[cud1]" history-substring-search-down
bindkey -M viins "^u" clear-screen
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
bindkey -M vicmd '^a' beginning-of-line
bindkey -M vicmd '^e' end-of-line
bindkey -M vicmd 'H' beginning-of-line
bindkey -M vicmd 'L' end-of-line
bindkey -M vicmd 'u' undo

# Make copy/paste with the system clipboard behave as expected with vim commands.
function cutbuffer() {
  zle .$WIDGET
  echo -n $CUTBUFFER | pbcopy
  region_highlight=("0 0 standout")
}

zle_cut_widgets=(
  vi-yank
  vi-yank-eol
)
for widget in $zle_cut_widgets
do
  zle -N $widget cutbuffer
done

function putbuffer() {
  zle copy-region-as-kill "$(pbpaste)"
  zle .$WIDGET
}

zle_put_widgets=(
  vi-put-after
  vi-put-before
)
for widget in $zle_put_widgets
do
  zle -N $widget putbuffer
done

# Edit command in vim
zle -N edit-command-line
bindkey -M vicmd E edit-command-line

###############################################################################
# Virtualenv Wrapper
###############################################################################
if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
  export WORKON_HOME=$HOME/.virtualenvs
  source /usr/local/bin/virtualenvwrapper.sh
fi

###############################################################################
# Powerline
###############################################################################
export POWERLINE_COMMAND=$HOME/.local/bin/powerline-hs
source /usr/local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
