let mapleader = ' '

" Display
set more                      " Use more prompt
set autoread                  " Watch for file changes
set number                    " Line numbers
set hidden
set showmode
set visualbell
set noerrorbells

" Scrolling
set sidescrolloff=5           " Keep at least 5 lines left/right
set scrolloff=5               " Keep at least 5 lines above/below

" Clipboard
set clipboard=unnamed

" Searching
set incsearch                 " Incremental search
set ignorecase                " Search ignoring case
set smartcase                 " Case sensitive for uppercase
set hlsearch                  " Highlight the search
set autoindent
set listchars+=trail:â€¢

set backspace=indent,eol,start
set linebreak

set relativenumber

" Sort lines
vmap <Leader>S :sort<CR>

" Exiting insert mode
inoremap jk <Esc>

" Search word under cursor
nnoremap <Leader>s *

" Update buffer
nnoremap <Leader>r :so ~/.ideavimrc<CR>

" Jump to current function declaration
nmap <Leader>d [m

" Intelligently jump over wrapped lines
nnoremap <expr> j v:count ? 'j' : 'gj'
nnoremap <expr> k v:count ? 'k' : 'gk'

vnoremap <expr> j v:count ? 'j' : 'gj'
vnoremap <expr> k v:count ? 'k' : 'gk'

" :(
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev WQ wq
cnoreabbrev Wq wq
cnoreabbrev wQ wq

" Avoid ex mode
nnoremap Q <nop>

" Easily move to start/end of line
nnoremap H ^
vnoremap H ^
onoremap H ^
nnoremap L $
vnoremap L $
onoremap L $

" Easier to run commands
nnoremap ; :
vnoremap ; :

" Easy window navigation
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-h> <C-w>h
nnoremap <C-k> <C-w>k

" Actions
nnoremap <Leader>a :action FindInPath<CR>
nnoremap <Leader><Leader> :action VimFilePrevious<CR>
nnoremap <Leader>x :action GotoImplementation<CR>
nnoremap <C-p> :action GotoFile<CR>
nnoremap <Leader>c :action CommentByLineComment<CR>
nnoremap <Leader>o :action OptimizeImports<CR>
nnoremap <Leader>f :action SelectInProjectView<CR>

" Git
nnoremap <Leader>gr :action Github.Open.In.Browser<CR>
nnoremap <Leader>hn :action VcsShowNextChangeMarker<CR>
nnoremap <Leader>hu :action Vcs.RollbackChangedLines<CR>

nnoremap S :action FindUsages<CR>

" Easy system clipboard copy/paste
nnoremap Y y$
nnoremap p "*p
nnoremap P "*P
nnoremap x "_x
vnoremap x "_x

" Don't overwrite register when pasting over selection
vnoremap p pgvy

" Moving blocks of text in visual mode
vnoremap < <gv
vnoremap > >gv

" Indent everything
noremap <Leader>= ggVG=

" Change font size
nnoremap + :action EditorIncreaseFontSize<CR>
nnoremap - :action EditorDecreaseFontSize<CR>
nnoremap <Leader>= :action EditorResetFontSize<CR>

" Mimic Vim Multiple Cursors
nnoremap <C-n> :action RenameElement<CR>

" Splits
nnoremap <C-v> :action VimWindowSplitVertical<CR>

" Folds
nnoremap fo :action ExpandRegion<CR>
nnoremap fc :action CollapseRegion<CR>

" AceJump
nnoremap <Leader>w :action emacsIDEAs.AceJumpWord<CR>
nnoremap <Leader>b :action emacsIDEAs.AceJumpWord<CR>
